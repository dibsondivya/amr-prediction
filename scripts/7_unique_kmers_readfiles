################################################## get unique kmers in library ##############################################################
#### get kmers that are unique to ribotype in library
import sys
import subprocess
####import pandas as pd
import os
import csv
from multiprocessing import Pool as ThreadPool  
import collections
from tqdm import tqdm

# initialize
kmer_size = 17 # ACTIONABLE: to be declared
os.chdir('/rds/general/user/dds122/ephemeral/kmer_'+str(kmer_size)+'_txt/')
n_threads = 4

# load library kmers
global library_kmer_2_id
library_kmer_2_id = dict()
file_content = csv.reader(open('/rds/general/project/hda-22-23/live/Summer_projects/dds122/data/05-25-2023/kmer_id'+str(kmer_size)+'.csv'), delimiter=',')
for line in file_content:
    kmer = line[0]
    id_ = line[1]
    library_kmer_2_id[kmer] = id_

global library_id_2_ribotype
library_id_2_ribotype = dict()
global library_kmer_2_ribotype
library_kmer_2_ribotype = dict()
file_content = csv.reader(open('/rds/general/project/hda-22-23/live/Summer_projects/dds122/data/05-25-2023/id_ribotype'+str(kmer_size)+'.csv'), delimiter=',')
for line in file_content:
    id_ = line[0]
    ribotype_list = line[1]
    #print(ribotype_list)
    #print(ribotype_list.count(','))
    if ribotype_list.count(',') == 0:
        library_id_2_ribotype[id_] = ribotype_list.replace("{'", '').replace("'}", '')
        kmer_list = list(library_kmer_2_id.keys())
        id_list = list(library_kmer_2_id.values())
        kmer_position = id_list.index(id_)
        kmer_ = kmer_list[kmer_position]
        #library_kmer_2_ribotype[kmer_] = ribotype_list.replace("['", '').replace("']", '') # for k=21 only
        library_kmer_2_ribotype[kmer_] = ribotype_list.replace("{'", '').replace("'}", '') # for k=17 and k=31

shrunk_library_kmer_2_ribotype = dict((k, v) for k, v in library_kmer_2_ribotype.items() if (v == '078') | (v == '027') | (v == '001') | (v == '014'))
shrunk_library_id_2_ribotype = dict((k, v) for k, v in library_id_2_ribotype.items() if (v == '078') | (v == '027') | (v == '001') | (v == '014'))

## get distinct library kmers per ribotype
print(Counter(shrunk_library_kmer_2_ribotype.values()))
print(Counter(shrunk_library_id_2_ribotype.values()))

## save files
OutputFilename = 'shrunk_library_kmer_2_ribotype_k'+str(kmer_size)+'_dict.txt'
OutputPath = '/rds/general/project/hda-22-23/live/Summer_projects/dds122/data/05-25-2023/'
out_file = os.path.join(OutputPath,OutputFilename)
out = open(out_file, 'w+')
for kmer_, ribotype_ in shrunk_library_kmer_2_ribotype.items():
    out.write(str(kmer_) + '	' + str(ribotype_) + '\n')
out.close()       

OutputFilename = 'shrunk_library_id_2_ribotype_k'+str(kmer_size)+'_dict.txt'
OutputPath = '/rds/general/project/hda-22-23/live/Summer_projects/dds122/data/05-25-2023/'
out_file = os.path.join(OutputPath,OutputFilename)
out = open(out_file, 'w+')
for id_, ribotype_ in shrunk_library_id_2_ribotype.items():
    out.write(str(id_) + '	' + str(ribotype_) + '\n')
out.close() 

################################################## get kmers in read files ##############################################################
# combine all txt one huge dictionary
import json
import os
import math
from tqdm import tqdm

kmer_size = 17

# Define output filename
OutputFilename = 'new3_kmer'+str(kmer_size)+'_dict.txt'

# Define path to input and output files
InputPath  = '/rds/general/user/dds122/ephemeral/kmer_'+str(kmer_size)+'_df/'
OutputPath = '/rds/general/project/hda-22-23/live/Summer_projects/dds122/data/05-25-2023/'

# Define output file
out_file = os.path.join(OutputPath,OutputFilename)

id_count = collections.defaultdict(int)
kmer_count = collections.defaultdict(int)


def append_record(fn, record):
    with open(fn, 'a') as f:
        json.dump(record, f)

# Loop through each file in input directory
for fn in tqdm(os.listdir(InputPath)):
    # Define full filename
    in_file = os.path.join(InputPath,fn)
    if os.path.isfile(in_file) and fn.endswith('.txt'):
        with open(in_file, 'r') as file_in:
            content = file_in.readlines()
            for line in content:
                insert = line.strip().split('\t')
                id_ = insert[0]
                if id_ in shrunk_library_id_2_ribotype: # add to dictionary
                    if id_ in id_count:
                        id_count[id_] += int(insert[1])
                    else:
                        id_count[id_] = int(insert[1])

# save to txt file
out = open(out_file, 'w+')
for id_, count_ in id_count.items():
    out.write(str(id_) + '	' + str(count_) + '\n')
out.close()          

################################################## get max/sum/mean/median counts of unique k-mers from prev step ##############################################################
